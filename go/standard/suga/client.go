// Code generated by Suga SDK generator. DO NOT EDIT.

package suga

import (
	"fmt"
	"os"

	storagepb "github.com/nitrictech/suga/proto/storage/v2"

	"github.com/nitrictech/suga/client/go/suga"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"
)

// Client provides access to suga application resources
type Client struct {
	Files *suga.Bucket
}

// NewClient creates a new set of all bucket clients
func NewClient() (*Client, error) {
	address := os.Getenv("SUGA_SERVICE_ADDRESS")
	if address == "" {
		address = "localhost:50051"
	}

	cc, err := grpc.NewClient(address, grpc.WithTransportCredentials(insecure.NewCredentials()))
	if err != nil {
		return nil, fmt.Errorf("failed to connect to runtime server: %w", err)
	}

	storageClient := storagepb.NewStorageClient(cc)

	return &Client{
		Files: suga.NewBucket(storageClient, "files"),
	}, nil
}
